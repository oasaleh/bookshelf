{"version":3,"sources":["BooksAPI.js","components/Header.js","components/BookCard.js","components/BookShelf.js","pages/LibraryView.js","pages/SearchPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","id","method","body","JSON","stringify","then","res","json","HeaderDiv","styled","div","AddButton","button","Header","to","type","BookCardDiv","ImageFrame","Image","img","DropDownMenu","TitleTag","p","AuthorTag","BookCard","bookInfo","updateShelf","event","a","preventDefault","BooksAPI","target","value","imgUrl","imageLinks","thumbnail","replace","src","alt","title","onChange","e","handleChange","disabled","authors","BookShelfDiv","ShelfName","BookTray","BookShelf","emoji","books","length","style","fontSize","map","LibraryView","allBooks","setAllBooks","filter","SubHeader","BackButton","SearchBar","DisplayView","Search","useState","setBooks","searchField","setSearchField","isBookInLibrary","libraryBooks","searchResults","refinedSearchResults","error","forEach","myBook","find","newBook","searchBooks","useCallback","query","maxResults","data","unrefinedSearechResults","useEffect","width","placeholder","View","App","loading","setLoadeding","getBooks","className","exact","path","SearchPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae037776.chunk.js","sourcesContent":["/* eslint-disable no-multi-assign */\nconst api = 'https://reactnd-books-api.udacity.com';\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet { token } = localStorage;\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: 'application/json',\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n/* ---------------------------------- style --------------------------------- */\nconst HeaderDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #616265;\n`;\nconst AddButton = styled.button`\n  border: 0px solid;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 35px;\n  margin-bottom: 2px;\n  padding-bottom: 0px;\n  padding-top: 0px;\n  background-color: #ffffff;\n  :hover {\n    background-color: #f2f3f4;\n  }\n`;\n/* -------------------------------- component ------------------------------- */\nconst Header = () => (\n  <HeaderDiv>\n    <h1>Bookshelf</h1>\n    <Link to=\"/search\">\n      <AddButton type=\"button\">\n        <span>📘</span>\n      </AddButton>\n    </Link>\n  </HeaderDiv>\n);\n\nexport default Header;\n","import styled from 'styled-components';\nimport * as BooksAPI from '../BooksAPI';\n\n/* ---------------------------------- style --------------------------------- */\nconst BookCardDiv = styled.div`\n  padding: 5px;\n  width: 130px;\n  height: 250px;\n`;\nconst ImageFrame = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 5px 2px;\n`;\nconst Image = styled.img`\n  margin: auto;\n  border-radius: 8px;\n  border: 0.5px solid #e0e0e0;\n`;\nconst DropDownMenu = styled.div`\n  text-align: center;\n  font-size: 0.75rem;\n  & > * {\n    background-color: #409d69;\n    border-radius: 3px;\n  }\n`;\nconst TitleTag = styled.p`\n  font-size: 0.9rem;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst AuthorTag = styled.p`\n  font-size: 0.8rem;\n  color: #616364;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n/* -------------------------------- component ------------------------------- */\nconst BookCard = ({ bookInfo, updateShelf }) => {\n  async function handleChange(book, event) {\n    event.preventDefault();\n    const response = await BooksAPI.update(book, event.target.value);\n    updateShelf();\n  }\n  // Some of the books do not have this property - I learned this the hard way...\n  let imgUrl = '';\n  if (bookInfo.imageLinks && bookInfo.imageLinks.thumbnail) {\n    imgUrl = bookInfo.imageLinks.thumbnail.replace(/^http\\/\\//i, 'https');\n  }\n  return (\n    <BookCardDiv>\n      <ImageFrame>\n        <Image src={imgUrl} alt={`${bookInfo.title} Cover`} />\n      </ImageFrame>\n\n      <DropDownMenu>\n        <select\n          value={bookInfo.shelf}\n          onChange={(e) => handleChange(bookInfo, e)}\n        >\n          <option value=\"move\" disabled>\n            Move to...\n          </option>\n          <option value=\"none\">--None</option>\n          <option value=\"currentlyReading\">Currently Reading</option>\n          <option value=\"wantToRead\">Want to Read</option>\n          <option value=\"read\">Read</option>\n        </select>\n      </DropDownMenu>\n      <TitleTag>{bookInfo.title}</TitleTag>\n      <AuthorTag>{bookInfo.authors}</AuthorTag>\n    </BookCardDiv>\n  );\n};\n\nexport default BookCard;\n","import styled from 'styled-components';\nimport BookCard from './BookCard';\n\n/* ---------------------------------- style --------------------------------- */\nconst BookShelfDiv = styled.div`\n  padding: 10px 50px;\n`;\nconst ShelfName = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  font-size: 1.1rem;\n  font-weight: 500;\n  width: fit-content;\n`;\nconst BookTray = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n  gap: 22px;\n  padding: 30px 0px;\n  background-color: #f2f3f4;\n  border-radius: 5px;\n  margin: auto;\n`;\n/* -------------------------------- component ------------------------------- */\nconst BookShelf = ({ emoji, title, books, updateShelf }) =>\n  books || books.length ? (\n    <BookShelfDiv>\n      <ShelfName>\n        <span style={{ fontSize: '30px' }}>{emoji}</span>\n        <h3>{title}</h3>\n      </ShelfName>\n      <BookTray id=\"tray\">\n        {books.map((book) => (\n          <BookCard bookInfo={book} updateShelf={updateShelf} key={book.id} />\n        ))}\n      </BookTray>\n    </BookShelfDiv>\n  ) : (\n    <div>\n      <p>No Books!</p>\n    </div>\n  );\n\nexport default BookShelf;\n","import BookShelf from '../components/BookShelf';\n\nconst LibraryView = ({ allBooks, setAllBooks, updateShelf }) => (\n  <div>\n    <div>\n      <BookShelf\n        emoji=\"📖\"\n        title=\"Currently Reading\"\n        books={allBooks.filter((book) => book.shelf === 'currentlyReading')}\n        updateShelf={updateShelf}\n      />\n      <BookShelf\n        emoji=\"📕\"\n        title=\"Want to Read\"\n        books={allBooks.filter((book) => book.shelf === 'wantToRead')}\n        updateShelf={updateShelf}\n      />\n      <BookShelf\n        emoji=\"📚\"\n        title=\"Read\"\n        books={allBooks.filter((book) => book.shelf === 'read')}\n        updateShelf={updateShelf}\n      />\n    </div>\n  </div>\n);\n\nexport default LibraryView;\n","import { useEffect, useState, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport * as BooksAPI from '../BooksAPI';\nimport BookShelf from '../components/BookShelf';\n\n/* ---------------------------------- style --------------------------------- */\nconst SubHeader = styled.div`\n  margin: 10px 0 0px 0;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: left;\n  align-items: center;\n`;\nconst BackButton = styled.button`\n  background-color: transparent;\n  border: 0px solid;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 35px;\n  padding: 0px 10px;\n  margin-right: 10px;\n  :hover {\n    background-color: #f2f3f4;\n  }\n`;\nconst SearchBar = styled.div`\n  text-align: center;\n  width: 100%;\n  padding-right: 10px;\n  & > input {\n    padding: 6px 5px;\n    font-size: 13px;\n    width: 100%;\n    border: 0.5px solid lightgray;\n    border-radius: 6px;\n  }\n`;\nconst DisplayView = styled.div`\n  text-align: center;\n`;\n/* -------------------------------- component ------------------------------- */\nconst Search = ({ allBooks, setAllBooks, updateShelf }) => {\n  const [books, setBooks] = useState([]);\n  const [searchField, setSearchField] = useState('');\n\n  function isBookInLibrary(libraryBooks, searchResults) {\n    const refinedSearchResults = searchResults;\n    if (!searchResults.error) {\n      searchResults.forEach((book) => {\n        libraryBooks.forEach((myBook) => {\n          if (book.id === myBook.id) {\n            refinedSearchResults.find(\n              (newBook) => newBook.id === myBook.id,\n            ).shelf = myBook.shelf;\n          }\n        });\n      });\n    }\n    return refinedSearchResults;\n  }\n\n  const searchBooks = useCallback(async () => {\n    const unrefinedSearechResults = await BooksAPI.search(searchField);\n    const searchResults = isBookInLibrary(allBooks, unrefinedSearechResults);\n    setBooks(searchResults);\n  }, [searchField]);\n\n  function handleChange(e) {\n    setSearchField(e.target.value);\n  }\n\n  useEffect(() => {\n    if (searchField) {\n      searchBooks();\n    }\n  }, [searchField]);\n\n  return (\n    <div>\n      <SubHeader>\n        <Link style={{ width: 'fit-content' }} to=\"/\">\n          <BackButton type=\"button\">🔙</BackButton>\n        </Link>\n        <SearchBar>\n          <input\n            type=\"text\"\n            value={searchField}\n            onChange={(e) => handleChange(e)}\n            placeholder=\"Search by title or author 🔍\"\n          />\n        </SearchBar>\n      </SubHeader>\n      <DisplayView>\n        {(() => {\n          if (books.error) {\n            return (\n              <p>\n                Sorry, I couldn&apos;t find a match.\n                <span style={{ fontSize: '30px' }}> 😥</span>\n              </p>\n            );\n          }\n          if (searchField === '') {\n            return (\n              <p>\n                Are you sure you typed something?\n                <span style={{ fontSize: '30px' }}> 🤔</span>\n              </p>\n            );\n          }\n          return (\n            <BookShelf\n              title=\"Search Results\"\n              books={books}\n              updateShelf={updateShelf}\n              emoji=\"🔍\"\n            />\n          );\n        })()}\n      </DisplayView>\n    </div>\n  );\n};\n\nexport default Search;\n","import { useState, useEffect, useCallback } from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport * as BooksAPI from './BooksAPI';\nimport Header from './components/Header';\nimport LibraryView from './pages/LibraryView';\nimport SearchPage from './pages/SearchPage';\n\n/* ---------------------------------- style --------------------------------- */\nconst View = styled.div`\n  padding: 25px 40px;\n  max-width: 900px;\n  margin: auto;\n`;\n/* -------------------------------- component ------------------------------- */\n\nfunction App() {\n  const [loading, setLoadeding] = useState(true);\n  const [allBooks, setAllBooks] = useState([]);\n\n  const getBooks = useCallback(async () => {\n    const books = await BooksAPI.getAll();\n    setAllBooks(books);\n    setLoadeding(false);\n  }, []);\n\n  useEffect(() => {\n    getBooks();\n  }, []);\n\n  function updateShelf() {\n    // setLoadeding(true);\n    getBooks();\n  }\n\n  return (\n    <View className=\"App\">\n      <Header />\n      <div>\n        {!loading ? (\n          <Switch>\n            <Route exact path=\"/search\">\n              <SearchPage\n                allBooks={allBooks}\n                setAllBooks={setAllBooks}\n                updateShelf={updateShelf}\n              />\n            </Route>\n            <Route path=\"/\">\n              <LibraryView\n                allBooks={allBooks}\n                setAllBooks={setAllBooks}\n                updateShelf={updateShelf}\n              />\n            </Route>\n          </Switch>\n        ) : (\n          <p>Loading!</p>\n        )}\n      </div>\n    </View>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}